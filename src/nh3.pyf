!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module nh3 ! in 
    interface  ! in :nh3
        subroutine pot(xcart,u11,u22,u12,v1,v2,gu11,gu22,gu12,gv1,gv2) ! in :nh3:nh3.f
            double precision dimension(12),intent(in) :: xcart
            double precision,intent(out) :: u11
            double precision,intent(out)  :: u22
            double precision,intent(out)  :: u12
            double precision,intent(out)  :: v1
            double precision,intent(out)  :: v2
            double precision dimension(12),intent(out)  :: gu11
            double precision dimension(12),intent(out)  :: gu22
            double precision dimension(12),intent(out)  :: gu12
            double precision dimension(12),intent(out)  :: gv1
            double precision dimension(12),intent(out)  :: gv2
        end subroutine pot
        subroutine prepot ! in :nh3:nh3.f
        end subroutine prepot
        subroutine packpot(coord,u11,u22,u12,v1,v2,gcu11,gcu22,gcu12,gcv1,gcv2) ! in :nh3:nh3.f
            double precision dimension(12) :: coord
            double precision :: u11
            double precision :: u22
            double precision :: u12
            double precision :: v1
            double precision :: v2
            double precision dimension(12) :: gcu11
            double precision dimension(12) :: gcu22
            double precision dimension(12) :: gcu12
            double precision dimension(12) :: gcv1
            double precision dimension(12) :: gcv2
            double precision dimension(62) :: nhcoeu1
            double precision dimension(71) :: nhcoeu2
            double precision dimension(45) :: nhcoeu12
            integer dimension(62,7) :: nhindu1
            integer dimension(71,7) :: nhindu2
            integer dimension(45,7) :: nhindu12
            double precision dimension(3) :: rrrrr
            logical :: lrrrrr
            common /c_nhcoe/ nhcoeu1,nhcoeu2,nhcoeu12,nhindu1,nhindu2,nhindu12
            common /calcrrrr/ rrrrr,lrrrrr
        end subroutine packpot
        subroutine sumpoly(nc,ind0,bowint,coeff,v,gv,cpot) ! in :nh3:nh3.f
            integer, optional,check(shape(ind0, 0) == nc),depend(ind0) :: nc=shape(ind0, 0)
            integer dimension(nc,7) :: ind0
            double precision dimension(7) :: bowint
            double precision dimension(nc),depend(nc) :: coeff
            double precision :: v
            double precision dimension(7) :: gv
            character*3 :: cpot
        end subroutine sumpoly
        subroutine symopt(n,ip,s) ! in :nh3:nh3.f
            integer, optional,check(shape(ip, 0) == n),depend(ip) :: n=shape(ip, 0)
            integer dimension(n) :: ip
            double precision dimension(n,n),depend(n) :: s
        end subroutine symopt
        subroutine getsym7g(s,x,y,dy) ! in :nh3:nh3.f
            double precision dimension(3,3) :: s
            double precision dimension(7) :: x
            double precision dimension(7) :: y
            double precision dimension(7,7) :: dy
        end subroutine getsym7g
        subroutine getsym7(s,x,y) ! in :nh3:nh3.f
            double precision dimension(3,3) :: s
            double precision dimension(7) :: x
            double precision dimension(7) :: y
        end subroutine getsym7
        subroutine getsym3(s,x,y) ! in :nh3:nh3.f
            double precision dimension(3,3) :: s
            double precision dimension(3) :: x
            double precision dimension(3) :: y
        end subroutine getsym3
        subroutine repulsive(rr,erep,derep,cpot) ! in :nh3:nh3.f
            double precision dimension(6) :: rr
            double precision :: erep
            double precision dimension(6) :: derep
            character*3 :: cpot
        end subroutine repulsive
        subroutine u11poly(ind0,geoint,xin,dxin,gin,x7,dx7,ans,g_ans) ! in :nh3:nh3.f
            integer dimension(7) :: ind0
            double precision dimension(7) :: geoint
            double precision dimension(7) :: xin
            double precision dimension(3) :: dxin
            double precision dimension(3) :: gin
            double precision :: x7
            double precision :: dx7
            double precision :: ans
            double precision dimension(7) :: g_ans
        end subroutine u11poly
        subroutine u22poly(ind0,geoint,xin,dxin,gin,g1in,x7,dx7,ans,g_ans) ! in :nh3:nh3.f
            integer dimension(7) :: ind0
            double precision dimension(7) :: geoint
            double precision dimension(7) :: xin
            double precision dimension(3) :: dxin
            double precision dimension(3) :: gin
            double precision dimension(3) :: g1in
            double precision :: x7
            double precision :: dx7
            double precision :: ans
            double precision dimension(7) :: g_ans
        end subroutine u22poly
        subroutine u12poly(ind0,geoint,gin,hbu12,d7,ans,g_ans) ! in :nh3:nh3.f
            integer dimension(7) :: ind0
            double precision dimension(7) :: geoint
            double precision dimension(3) :: gin
            double precision :: hbu12
            double precision :: d7
            double precision :: ans
            double precision dimension(7) :: g_ans
        end subroutine u12poly
        subroutine getadiabat(nv,u11,u22,u12,v1,v2,gu11,gu22,gu12,gv1,gv2) ! in :nh3:nh3.f
            integer, optional,check(shape(gu11, 0) == nv),depend(gu11) :: nv=shape(gu11, 0)
            double precision :: u11
            double precision :: u22
            double precision :: u12
            double precision :: v1
            double precision :: v2
            double precision dimension(nv) :: gu11
            double precision dimension(nv),depend(nv) :: gu22
            double precision dimension(nv),depend(nv) :: gu12
            double precision dimension(nv),depend(nv) :: gv1
            double precision dimension(nv),depend(nv) :: gv2
        end subroutine getadiabat
        subroutine calcindu1(ind,m1,m2,m3,m4,m5,m6,m7,nc) ! in :nh3:nh3.f
            integer dimension(nc,7) :: ind
            integer :: m1
            integer :: m2
            integer :: m3
            integer :: m4
            integer :: m5
            integer :: m6
            integer :: m7
            integer, optional,check(shape(ind, 0) == nc),depend(ind) :: nc=shape(ind, 0)
        end subroutine calcindu1
        subroutine calcindu2(ind,m1,m2,m3,m4,m5,m6,m7,nc) ! in :nh3:nh3.f
            integer dimension(nc,7) :: ind
            integer :: m1
            integer :: m2
            integer :: m3
            integer :: m4
            integer :: m5
            integer :: m6
            integer :: m7
            integer, optional,check(shape(ind, 0) == nc),depend(ind) :: nc=shape(ind, 0)
        end subroutine calcindu2
        subroutine calcindu12(ind,m1,m2,m3,m4,m5,m6,m7,nc) ! in :nh3:nh3.f
            integer dimension(nc,7) :: ind
            integer :: m1
            integer :: m2
            integer :: m3
            integer :: m4
            integer :: m5
            integer :: m6
            integer :: m7
            integer, optional,check(shape(ind, 0) == nc),depend(ind) :: nc=shape(ind, 0)
        end subroutine calcindu12
        subroutine potcoeff ! in :nh3:nh3.f
            double precision dimension(62) :: nhcoeu1
            double precision dimension(71) :: nhcoeu2
            double precision dimension(45) :: nhcoeu12
            integer dimension(62,7) :: nhindu1
            integer dimension(71,7) :: nhindu2
            integer dimension(45,7) :: nhindu12
            common /c_nhcoe/ nhcoeu1,nhcoeu2,nhcoeu12,nhindu1,nhindu2,nhindu12
        end subroutine potcoeff
        subroutine tobowman(x,bow,g_bow) ! in :nh3:nh3.f
            double precision dimension(12) :: x
            double precision dimension(7) :: bow
            double precision dimension(12,7) :: g_bow
            double precision dimension(3) :: rrrrr
            logical :: lrrrrr
            common /calcrrrr/ rrrrr,lrrrrr
        end subroutine tobowman
        subroutine g_distplane(a1,g_a1,a2,g_a2,a3,g_a3,d,g_d,x,g_x,y,g_y,z,g_z,dist,g_dist) ! in :nh3:nh3.f
            double precision :: a1
            double precision dimension(12) :: g_a1
            double precision :: a2
            double precision dimension(12) :: g_a2
            double precision :: a3
            double precision dimension(12) :: g_a3
            double precision :: d
            double precision dimension(12) :: g_d
            double precision :: x
            double precision dimension(12) :: g_x
            double precision :: y
            double precision dimension(12) :: g_y
            double precision :: z
            double precision dimension(12) :: g_z
            double precision :: dist
            double precision dimension(12) :: g_dist
        end subroutine g_distplane
        subroutine g_det3(a,g_a,ans,g_ans) ! in :nh3:nh3.f
            double precision dimension(3,3) :: a
            double precision dimension(12,3,3) :: g_a
            double precision :: ans
            double precision dimension(12) :: g_ans
        end subroutine g_det3
        subroutine carttoang(cart,ans,gangint) ! in :nh3:nh3.f
            double precision dimension(12) :: cart
            double precision dimension(7) :: ans
            double precision dimension(12,7) :: gangint
            double precision dimension(3) :: rrrrr
            logical :: lrrrrr
            common /calcrrrr/ rrrrr,lrrrrr
        end subroutine carttoang
        subroutine cart_to_polar(x,ans) ! in :nh3:nh3.f
            double precision dimension(3) :: x
            double precision dimension(3) :: ans
        end subroutine cart_to_polar
        subroutine polar_to_cart(p,ans) ! in :nh3:nh3.f
            double precision dimension(3) :: p
            double precision dimension(3) :: ans
        end subroutine polar_to_cart
        subroutine frombowman(bow,coord) ! in :nh3:nh3.f
            double precision dimension(7) :: bow
            double precision dimension(12) :: coord
        end subroutine frombowman
        subroutine angle_to_cart(angint,coord) ! in :nh3:nh3.f
            double precision dimension(7) :: angint
            double precision dimension(12) :: coord
        end subroutine angle_to_cart
        subroutine rarray(natoms,x,mx,r,dr,mr) ! in :nh3:nh3.f
            integer :: natoms
            double precision dimension(mx) :: x
            integer, optional,check(shape(x, 0) == mx),depend(x) :: mx=shape(x, 0)
            double precision dimension(mr) :: r
            double precision dimension(mx,mr),depend(mx,mr) :: dr
            integer, optional,check(shape(r, 0) == mr),depend(r) :: mr=shape(r, 0)
            double precision dimension(3) :: rrrrr
            logical :: lrrrrr
            common /calcrrrr/ rrrrr,lrrrrr
        end subroutine rarray
    end interface 
end python module nh3

! This file was auto-generated with f2py (version:1.23.5).
! See:
! https://web.archive.org/web/20140822061353/http://cens.ioc.ee/projects/f2py2e
